/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.gradleup.shadow' version '8.3.6'
    id 'com.google.protobuf' version '0.9.4'
}

// Customize source code layout
sourceSets {
    main {
        proto {
            srcDir 'proto'
        }
        java {
            srcDir 'java'
            exclude 'com/google/zetasketch/testing/**'
        }
    }
    test {
        java {
            srcDir 'java/com/google/zetasketch/testing'
            srcDir 'javatests'
        }
    }
}

// Configure where to find the dependencies of the project
repositories {
    mavenCentral()
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download pre-compiled protoc
        artifact = 'com.google.protobuf:protoc:4.30.0'
    }
}

// Configure the dependencies for production and test code
dependencies {
    annotationProcessor 'com.google.auto.value:auto-value:1.11.0'
    implementation 'com.google.auto.value:auto-value-annotations:1.11.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.google.errorprone:error_prone_annotations:2.14.0'
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'com.google.protobuf:protobuf-java:4.30.0'
    implementation 'it.unimi.dsi:fastutil:8.2.2'
    implementation 'org.checkerframework:checker-qual:3.30.0'
    testImplementation 'com.google.truth:truth:1.4.4'
    testImplementation 'com.google.truth.extensions:truth-proto-extension:1.4.4'
    testImplementation 'junit:junit:4.13.2'
}

// ----------------------------------------------------------------------------
// Configuration below are only used for publishing shaded artifacts to Maven
// ----------------------------------------------------------------------------

def shade = { 'com.google.zetasketch.shaded.' + it }

shadowJar {
    dependencies {
        // Shade guava and some of its transitive dependencies
        include(dependency('com.google.guava:.*:.*'))
        include(dependency('com.google.j2objc:j2objc-annotations:.*'))
        include(dependency('org.codehaus.mojo:animal-sniffer-annotations:.*'))

        // Shade protobuf
        include(dependency('com.google.protobuf:protobuf-java:.*'))
    }
    // guava uses namespaces 'com.google.common' and 'com.google.thirdparty'
    relocate 'com.google.common', shade('com.google.common')
    relocate 'com.google.thirdparty', shade('com.google.thirdparty')
    relocate 'com.google.j2objc', shade('com.google.j2objc')
    relocate 'org.codehaus.mojo', shade('org.codehaus.mojo')
    relocate 'com.google.protobuf', shade('com.google.protobuf')
}

// The other dependencies are not shaded and will be included in pom.xml
dependencies {
    shadow 'com.google.auto.value:auto-value-annotations:1.6.3'
    shadow 'com.google.code.findbugs:jsr305:3.0.2'
    shadow 'com.google.errorprone:error_prone_annotations:2.3.2'
    shadow 'it.unimi.dsi:fastutil:8.2.2'
    shadow 'org.checkerframework:checker-qual:2.8.1'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    from sourceSets.main.proto
    archiveClassifier = 'sources'
}

javadoc {
    // Include proto-generated Java classes because they are exposed at the API
    source "${buildDir}/generated/source/proto/main/java"
    // Exclude classes in internal/ because users should not use them directly
    exclude 'com/google/zetasketch/internal/**'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        shaded(MavenPublication) {
            // groupId, artifactId and version are defined in gradle.properties

            // primary artifact: the production Jar
            project.shadow.component(it)

            // secondary artifact: the source code Jar and javadoc Jar
            artifact sourcesJar
            artifact javadocJar

            // Provide the information in pom.xml required by
            // https://central.sonatype.org/pages/requirements.html
            pom {
                name = 'ZetaSketch'
                description = 'A collection of libraries for single-pass, distributed, sublinear-space approximate aggregation and sketching algorithms.'
                url = 'https://github.com/google/zetasketch'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'The ZetaSketch Team'
                        email = 'noreply+zetasketch@google.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/google/zetasketch.git'
                    developerConnection = 'scm:git:ssh://github.com/google/zetasketch.git'
                    url = 'https://github.com/google/zetasketch/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.shaded
}
